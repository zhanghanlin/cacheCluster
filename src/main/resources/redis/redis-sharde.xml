<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <description>Spring Jedis Sharde集群</description>

    <context:property-placeholder location="classpath:redis/redis.properties" file-encoding="UTF-8"/>

    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大分配的对象数 -->
        <property name="maxTotal" value="1024"/>
        <!-- 最大能够保持idel状态的对象数 -->
        <property name="maxIdle" value="5000"/>
        <!-- 多长时间检查一次连接池中空闲的连接 -->
        <property name="timeBetweenEvictionRunsMillis" value="1000"/>
        <!-- 空闲连接多长时间后会被收回 -->
        <property name="minEvictableIdleTimeMillis" value="30000"/>
        <!-- 调用borrow 一个对象方法时，是否检查其有效性 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 调用return 一个对象方法时，是否检查其有效性 -->
        <property name="testOnReturn" value="false"/>
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="true"/>
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" destroy-method="destroy">
        <constructor-arg ref="jedisPoolConfig"/>
        <!--如果以后需要扩展集群，只需要复制一份redis,修改端口，然后在这里配置即可-->
        <constructor-arg>
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis.1.host}"/>
                    <constructor-arg index="1" value="${redis.1.port}"/>
                    <constructor-arg index="2" value="${redis.1.name}"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <!--java帮我们同步sentinel的信息，将主从信息同步到客户端来-->
    <bean class="redis.clients.jedis.JedisSentinelPool">
        <constructor-arg index="0" value="mymaster"/>
        <constructor-arg index="1">
            <set>
                <value>127.0.0.1:26379</value>
            </set>
        </constructor-arg>
        <constructor-arg index="2" ref="jedisPoolConfig"/>
    </bean>
</beans>